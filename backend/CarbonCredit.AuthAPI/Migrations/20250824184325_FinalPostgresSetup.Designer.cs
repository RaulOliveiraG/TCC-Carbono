// <auto-generated />
using System;
using CarbonCredit.AuthAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CarbonCredit.AuthAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250824184325_FinalPostgresSetup")]
    partial class FinalPostgresSetup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CarbonCredit.AuthAPI.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cnpj")
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.Property<DateTime>("DataAtualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_atualizacao")
                        .HasDefaultValueSql("now() at time zone 'utc'");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_criacao")
                        .HasDefaultValueSql("now() at time zone 'utc'");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_nascimento");

                    b.Property<string>("DocumentoVerificacaoUrl")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)")
                        .HasColumnName("documento_verificacao_url");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("EnderecoCarteiraBlockchain")
                        .HasMaxLength(42)
                        .HasColumnType("character varying(42)")
                        .HasColumnName("endereco_carteira_blockchain");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("RazaoSocial")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("razao_social");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("StatusConta")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("status_conta");

                    b.Property<string>("Telefone")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("TipoPessoa")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("tipo_pessoa");

                    b.Property<string>("TipoUsuario")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("tipo_usuario");

                    b.Property<DateTime?>("UltimoLogin")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ultimo_login");

                    b.HasKey("Id");

                    b.HasIndex("Cnpj")
                        .IsUnique()
                        .HasFilter("\"Cnpj\" IS NOT NULL");

                    b.HasIndex("Cpf")
                        .IsUnique()
                        .HasFilter("\"Cpf\" IS NOT NULL");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("EnderecoCarteiraBlockchain")
                        .IsUnique()
                        .HasFilter("endereco_carteira_blockchain IS NOT NULL");

                    b.ToTable("usuarios", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
